<% layout("/layouts/boilerplate") -%>

<style>
    body {
        overflow: hidden; /* Prevent body scroll when the panel scrolls */
    }
    .map-view-container {
        display: flex;
        /* Full viewport height minus navbar and footer heights */
        height: calc(100vh - 5rem - 8rem); 
    }
    #listings-panel {
        width: 35%;
        max-width: 450px;
        min-width: 320px;
        padding: 1rem;
        overflow-y: auto;
        border-right: 1px solid #ddd;
    }
    #cluster-map {
        flex-grow: 1;
        height: 100%;
    }
    .listing-card-map {
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 0.75rem;
        margin-bottom: 1rem;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    .listing-card-map:hover {
        background-color: #f8f9fa;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .listing-card-map a {
        text-decoration: none;
        color: inherit;
    }
    .listing-card-map-img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 0.5rem;
        margin-bottom: 0.75rem;
    }
    .listing-card-map h5 {
        font-size: 1.1rem;
        margin-bottom: 0.25rem;
        font-weight: 600;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .listing-card-map p {
        margin-bottom: 0;
        font-size: 0.9rem;
    }
    /* Custom scrollbar for better aesthetics */
    #listings-panel::-webkit-scrollbar {
        width: 8px;
    }
    #listings-panel::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    #listings-panel::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 4px;
    }
    #listings-panel::-webkit-scrollbar-thumb:hover {
        background: #555;
    }

    @media (max-width: 768px) {
        .map-view-container {
            flex-direction: column;
            height: auto;
        }
        #listings-panel {
            width: 100%;
            max-width: none;
            height: 50vh; /* Assign a fixed height for the panel on mobile */
            border-right: none;
            border-bottom: 1px solid #ddd;
        }
        #cluster-map {
            height: 60vh; /* Assign a fixed height for the map on mobile */
        }
    }
</style>

<div class="row mt-3">
    <div class="col-12">
        <h3 class="text-center">Explore Listings on the Map</h3>
    </div>
</div>

<div class="map-view-container mt-3">
    <div id="listings-panel">
        <% for(let listing of allListings) { %>
            <div class="listing-card-map" id="card-<%= listing._id %>" data-listing-id="<%= listing._id %>">
                 <a href="/listings/<%= listing._id %>" target="_blank">
                    <img src="<%= listing.image.url %>" alt="<%= listing.title %>" class="listing-card-map-img">
                    <h5><%= listing.title %></h5>
                 </a>
                <p><%= listing.location %></p>
                <p><b>₹<%= listing.price.toLocaleString("en-IN") %></b> / month</p>
            </div>
        <% } %>
    </div>
    <div id="cluster-map"></div>
</div>


<script>
    // Pass server-side data to the client-side script
    const mapToken = "<%= process.env.MAP_TOKEN %>";
    const listings = <%- JSON.stringify(allListings) %>;
</script>

<script>
    // All the map logic is contained in this script tag
    mapboxgl.accessToken = mapToken;

    const map = new mapboxgl.Map({
        container: 'cluster-map',
        style: 'mapbox://styles/mapbox/streets-v12',
        center: [78.9629, 20.5937],
        zoom: 3
    });

    map.addControl(new mapboxgl.NavigationControl());

    const markerStyle = `
        .fa-marker {
            cursor: pointer; width: 30px; height: 30px; display: flex;
            justify-content: center; align-items: center;
            transform: translate(-50%, -100%);
            transition: transform 0.2s ease-in-out;
        }
        .fa-marker i {
            color: #fe424d; font-size: 30px;
            filter: drop-shadow(0 2px 3px rgba(0,0,0,0.4));
        }
        .fa-marker.highlighted {
            transform: translate(-50%, -100%) scale(1.3);
        }
        .mapboxgl-popup-content {
            border-radius: 8px;
            padding: 10px 15px;
            font-family: 'Plus Jakarta Sans', sans-serif;
            max-width: 200px;
        }
    `;

    function injectCSS(css) {
        const style = document.createElement('style');
        style.textContent = css;
        document.head.appendChild(style);
    }
    injectCSS(markerStyle);
    
    const markers = {};

    map.on('load', () => {
        const bounds = new mapboxgl.LngLatBounds();
        
        listings.forEach(listing => {
            if (!listing.geometry || !listing.geometry.coordinates || listing.geometry.coordinates.length !== 2) {
                console.warn('Skipping listing with invalid geometry:', listing.title);
                return;
            }

            const coordinates = listing.geometry.coordinates;
            
            const el = document.createElement('div');
            el.className = 'fa-marker';
            el.innerHTML = '<i class="fa-solid fa-location-dot"></i>';
            el.dataset.listingId = listing._id;

            const popupContent = `
                <strong><a href="/listings/${listing._id}" target="_blank" class="text-decoration-none text-danger">${listing.title}</a></strong>
                <p class="mb-0">₹${Number(listing.price).toLocaleString("en-IN")}</p>
            `;

            const popup = new mapboxgl.Popup({ offset: 25, closeButton: false }).setHTML(popupContent);

            const marker = new mapboxgl.Marker(el)
                .setLngLat(coordinates)
                .setPopup(popup)
                .addTo(map);
            
            markers[listing._id] = { marker, el };
            bounds.extend(coordinates);
        });

        if (listings.length > 0 && !bounds.isEmpty()) {
            map.fitBounds(bounds, { padding: 80, duration: 1000 });
        }

        // Add interactivity
        const listingsPanel = document.getElementById('listings-panel');
        
        listingsPanel.addEventListener('mouseover', (e) => {
            const card = e.target.closest('.listing-card-map');
            if (card) {
                const listingId = card.dataset.listingId;
                if (markers[listingId]) {
                    markers[listingId].el.classList.add('highlighted');
                    markers[listingId].marker.togglePopup();
                }
            }
        });

        listingsPanel.addEventListener('mouseout', (e) => {
            const card = e.target.closest('.listing-card-map');
            if (card) {
                const listingId = card.dataset.listingId;
                if (markers[listingId]) {
                    markers[listingId].el.classList.remove('highlighted');
                    if(markers[listingId].marker.getPopup().isOpen()) {
                        markers[listingId].marker.togglePopup();
                    }
                }
            }
        });
        
        listingsPanel.addEventListener('click', (e) => {
            const card = e.target.closest('.listing-card-map');
            // Check if the click is not on the 'a' tag to prevent double navigation
            if (card && e.target.tagName.toLowerCase() !== 'a') {
                const listingId = card.dataset.listingId;
                if (markers[listingId]) {
                    map.flyTo({
                        center: markers[listingId].marker.getLngLat(),
                        zoom: 12,
                        speed: 1.5
                    });
                }
            }
        });
    });
</script>

